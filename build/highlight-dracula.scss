/* Variables from https://github.com/dracula/pygments/blob/9cf371f24908e2b138cfcf0a87d0d654b4befd8f/dracula.scss */
$dt-gray-dark: #282a36; // Background;
$dt-gray: #44475a; // Current Line & Selection;
$dt-gray-light: #f8f8f2; // Foreground;
$dt-blue: #6272a4; // Comment;
$dt-cyan: #8be9fd;
$dt-green: #50fa7b;
$dt-orange: #ffb86c;
$dt-pink: #ff79c6;
$dt-purple: #bd93f9;
$dt-red: #ff5555;
$dt-yellow: #f1fa8c;

// Styles for the different content wrapper which contain e.g. line numbers
.file-content.code,
.diff-wrap-lines.code {
  &,
  pre.code,
  .line_holder .line_content,
  .line-numbers,
  .diff-line-num,
  .line-links:hover,
  .line-links-wrapper:first-child .line-links::before {
    background-color: $dt-gray-dark;
    color: $dt-gray-light;
  }

  .diff-line-num,
  .diff-line-num a {
    color: $dt-blue;
  }

  .diff-line-num,
  .line-links-wrapper:first-child .line-links::before,
  pre.code {
    border-color: $dt-blue;
  }

  .line_holder {
    .line-coverage {
      @include line-coverage-border-color($dt-green, $dt-orange);
    }

    .diff-line-num.new,
    .line-coverage.new,
    .line_content.new {
      @include diff-background(rgba($dt-green, .15), rgba($dt-green, .5), transparent);

      &::before {
        color: $dt-green;
      }

      a {
        color: $dt-blue;
      }
    }

    .diff-line-num.old,
    .line-coverage.old,
    .line_content.old {
      @include diff-background(rgba($dt-red, .3), rgba($dt-red, .7), transparent);

      &::before {
        color: $dt-red;
      }

      a {
        color: $dt-blue;
      }
    }

    .diff-line-num {
      &.is-over,
      &.hll:not(.empty-cell).is-over {
        background-color: $dt-blue;
        border-color: darken($dt-blue, 5%);

        a {
          color: $dt-pink;
        }
      }
    }

    .line_content.match {
      @include dark-diff-match-line;
    }

    &:not(.diff-expanded) + .diff-expanded,
    &.diff-expanded + .line_holder:not(.diff-expanded) {
      > .diff-line-num,
      > .line-coverage,
      > .line_content {
        border-top: 1px solid $dt-gray-dark;
      }
    }

    &.diff-expanded {
      > .diff-line-num,
      > .line-coverage,
      > .line_content {
        background: $dt-gray-dark;
        border-color: $dt-gray-dark;
      }
    }
  }
}

// Syntax highlighting styles
.code.js-syntax-highlight {
  & {
    background-color: $dt-gray-dark;
    color: $dt-gray-light;
  }

  // highlight line via anchor
  pre .hll, tr .hll {
    background-color: $dt-gray !important;
  }

  // Search result highlight
  span.highlight_word {
    background-color: $dt-gray-light !important;
    color: #000 !important;
  }

  // Links to URLs, emails, or dependencies
  .line a {
    color: $dt-pink;
  }

  .hll {
    background-color: $dt-yellow;
  }

  /* Comment */
  .c {
    color: $dt-blue;
  }

  /* Error */
  .err {
    color: $dt-gray-light;
  }

  /* Generic */
  .g {
    color: $dt-gray-light;
  }

  /* Keyword */
  .k {
    color: $dt-pink;
  }

  /* Literal */
  .l {
    color: $dt-gray-light;
  }

  /* Name */
  .n {
    color: $dt-gray-light;
  }

  /* Operator */
  .o {
    color: $dt-pink;
  }

  /* Other */
  .x {
    color: $dt-gray-light;
  }

  /* Punctuation */
  .p {
    color: $dt-gray-light;
  }

  /* Comment.Hashbang */
  .ch {
    color: $dt-blue;
  }

  /* Comment.Multiline */
  .cm {
    color: $dt-blue;
  }

  /* Comment.Preproc */
  .cp {
    color: $dt-pink;
  }

  /* Comment.PreprocFile */
  .cpf {
    color: $dt-blue;
  }

  /* Comment.Single */
  .c1 {
    color: $dt-blue;
  }

  /* Comment.Special */
  .cs {
    color: $dt-blue;
  }

  /* Generic.Deleted */
  .gd {
    color: #8b080b
  }

  /* Generic.Emph */
  .ge {
    color: $dt-gray-light;
  }

  /* Generic.Error */
  .gr {
    color: $dt-gray-light;
  }

  /* Generic.Heading */
  .gh {
    color: $dt-gray-light;
  }

  /* Generic.Inserted */
  .gi {
    color: $dt-gray-light;
  }

  /* Generic.Output */
  .go {
    color: $dt-gray;
  }

  /* Generic.Prompt */
  .gp {
    color: $dt-gray-light;
  }

  /* Generic.Strong */
  .gs {
    color: $dt-gray-light;
  }

  /* Generic.Subheading */
  .gu {
    color: $dt-gray-light;
  }

  /* Generic.Traceback */
  .gt {
    color: $dt-gray-light;
  }

  /* Keyword.Constant */
  .kc {
    color: $dt-pink;
  }

  /* Keyword.Declaration */
  .kd {
    color: $dt-cyan;
  }

  /* Keyword.Namespace */
  .kn {
    color: $dt-pink;
  }

  /* Keyword.Pseudo */
  .kp {
    color: $dt-pink;
  }

  /* Keyword.Reserved */
  .kr {
    color: $dt-pink;
  }

  /* Keyword.Type */
  .kt {
    color: $dt-cyan;
  }

  /* Literal.Date */
  .ld {
    color: $dt-gray-light;
  }

  /* Literal.Number */
  .m {
    color: $dt-purple;
  }

  /* Literal.String */
  .s {
    color: $dt-yellow;
  }

  /* Name.Attribute */
  .na {
    color: $dt-green;
  }

  /* Name.Builtin */
  .nb {
    color: $dt-cyan;
  }

  /* Name.Class */
  .nc {
    color: $dt-green;
  }

  /* Name.Constant */
  .no {
    color: $dt-gray-light;
  }

  /* Name.Decorator */
  .nd {
    color: $dt-gray-light;
  }

  /* Name.Entity */
  .ni {
    color: $dt-gray-light;
  }

  /* Name.Exception */
  .ne {
    color: $dt-gray-light;
  }

  /* Name.Function */
  .nf {
    color: $dt-green;
  }

  /* Name.Label */
  .nl {
    color: $dt-cyan;
  }

  /* Name.Namespace */
  .nn {
    color: $dt-gray-light;
  }

  /* Name.Other */
  .nx {
    color: $dt-gray-light;
  }

  /* Name.Property */
  .py {
    color: $dt-gray-light;
  }

  /* Name.Tag */
  .nt {
    color: $dt-pink;
  }

  /* Name.Variable */
  .nv {
    color: $dt-cyan;
  }

  /* Operator.Word */
  .ow {
    color: $dt-pink;
  }

  /* Text.Whitespace */
  .w {
    color: $dt-gray-light;
  }

  /* Literal.Number.Bin */
  .mb {
    color: $dt-purple;
  }

  /* Literal.Number.Float */
  .mf {
    color: $dt-purple;
  }

  /* Literal.Number.Hex */
  .mh {
    color: $dt-purple;
  }

  /* Literal.Number.Integer */
  .mi {
    color: $dt-purple;
  }

  /* Literal.Number.Oct */
  .mo {
    color: $dt-purple;
  }

  /* Literal.String.Affix */
  .sa {
    color: $dt-yellow;
  }

  /* Literal.String.Backtick */
  .sb {
    color: $dt-yellow;
  }

  /* Literal.String.Char */
  .sc {
    color: $dt-yellow;
  }

  /* Literal.String.Delimiter */
  .dl {
    color: $dt-yellow;
  }

  /* Literal.String.Doc */
  .sd {
    color: $dt-yellow;
  }

  /* Literal.String.Double */
  .s2 {
    color: $dt-yellow;
  }

  /* Literal.String.Escape */
  .se {
    color: $dt-yellow;
  }

  /* Literal.String.Heredoc */
  .sh {
    color: $dt-yellow;
  }

  /* Literal.String.Interpol */
  .si {
    color: $dt-yellow;
  }

  /* Literal.String.Other */
  .sx {
    color: $dt-yellow;
  }

  /* Literal.String.Regex */
  .sr {
    color: $dt-yellow;
  }

  /* Literal.String.Single */
  .s1 {
    color: $dt-yellow;
  }

  /* Literal.String.Symbol */
  .ss {
    color: $dt-yellow;
  }

  /* Name.Builtin.Pseudo */
  .bp {
    color: $dt-gray-light;
  }

  /* Name.Function.Magic */
  .fm {
    color: $dt-green;
  }

  /* Name.Variable.Class */
  .vc {
    color: $dt-cyan;
  }

  /* Name.Variable.Global */
  .vg {
    color: $dt-cyan;
  }

  /* Name.Variable.Instance */
  .vi {
    color: $dt-cyan;
  }

  /* Name.Variable.Magic */
  .vm {
    color: $dt-cyan;
  }

  /* Literal.Number.Integer.Long */
  .il {
    color: $dt-purple;
  }
}
